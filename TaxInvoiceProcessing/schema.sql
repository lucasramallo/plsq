-- Criando a tabela TB_EMITENTE
CREATE TABLE TB_EMITENTE (
    ID NUMBER PRIMARY KEY,
    NOME VARCHAR2(255) NOT NULL,
    CNPJ VARCHAR2(14) NOT NULL,
    ENDERECO VARCHAR2(255) NOT NULL,
    TELEFONE VARCHAR2(20),
    EMAIL VARCHAR2(255)
);

-- Criando a tabela TB_DESTINATARIO
CREATE TABLE TB_DESTINATARIO (
    ID NUMBER PRIMARY KEY,
    NOME VARCHAR2(255) NOT NULL,
    CPF_CNPJ VARCHAR2(14) NOT NULL,
    ENDERECO VARCHAR2(255) NOT NULL,
    TELEFONE VARCHAR2(20),
    EMAIL VARCHAR2(255)
);

-- Criando a tabela TB_PRODUTO
CREATE TABLE TB_PRODUTO (
    ID NUMBER PRIMARY KEY,
    DESCRICAO VARCHAR2(255) NOT NULL,
    CODIGO_BARRAS VARCHAR2(13) NOT NULL,
    NCM VARCHAR2(8) NOT NULL,
    CEST VARCHAR2(7),
    UNIDADE VARCHAR2(3) NOT NULL,
    VALOR_UNITARIO NUMBER(10,2) NOT NULL
);

-- Criando a tabela TB_NOTA_FISCAL
CREATE TABLE TB_NOTA_FISCAL (
    ID NUMBER PRIMARY KEY,
    NUMERO VARCHAR2(20) NOT NULL,
    SERIE VARCHAR2(5) NOT NULL,
    DATA_EMISSAO DATE NOT NULL,
    VALOR_TOTAL NUMBER(15,2),
    EMITENTE_ID NUMBER REFERENCES TB_EMITENTE(ID),
    DESTINATARIO_ID NUMBER REFERENCES TB_DESTINATARIO(ID),
    STATUS VARCHAR2(20) NOT NULL,
    CHAVE_ACESSO VARCHAR2(44),
    TIPO_OPERACAO VARCHAR2(20)
);

-- Criando a tabela TB_ITEM_NOTA_FISCAL
CREATE TABLE TB_ITEM_NOTA_FISCAL (
    ID NUMBER PRIMARY KEY,
    NOTA_FISCAL_ID NUMBER REFERENCES TB_NOTA_FISCAL(ID),
    PRODUTO_ID NUMBER REFERENCES TB_PRODUTO(ID),
    QUANTIDADE NUMBER(10,2),
    VALOR_UNITARIO NUMBER(10,2)
);

-- Criando a tabela TB_TRIBUTOS
CREATE TABLE TB_TRIBUTOS (
    ID NUMBER PRIMARY KEY,
    NOTA_FISCAL_ID NUMBER REFERENCES TB_NOTA_FISCAL(ID),
    ICMS NUMBER(10,2),
    IPI NUMBER(10,2),
    PIS NUMBER(10,2),
    COFINS NUMBER(10,2)
);

-- Criando a tabela TB_TRANSPORTADORA
CREATE TABLE TB_TRANSPORTADORA (
    ID NUMBER PRIMARY KEY,
    NOME VARCHAR2(255) NOT NULL,
    CNPJ VARCHAR2(14) NOT NULL,
    ENDERECO VARCHAR2(255) NOT NULL,
    TELEFONE VARCHAR2(20),
    EMAIL VARCHAR2(255)
);

-- Criando a tabela TB_FRETE
CREATE TABLE TB_FRETE (
    ID NUMBER PRIMARY KEY,
    NOTA_FISCAL_ID NUMBER REFERENCES TB_NOTA_FISCAL(ID),
    TRANSPORTADORA_ID NUMBER REFERENCES TB_TRANSPORTADORA(ID),
    VALOR_FRETE NUMBER(10,2),
    PLACA_VEICULO VARCHAR2(7),
    UF_VEICULO VARCHAR2(2),
    PESO_BRUTO NUMBER(10,2),
    PESO_LIQUIDO NUMBER(10,2)
);

-- Criando índices
CREATE INDEX IDX_NOTA_FISCAL_NUMERO ON TB_NOTA_FISCAL(NUMERO);
CREATE INDEX IDX_ITEM_NOTA_FISCAL_NOTA ON TB_ITEM_NOTA_FISCAL(NOTA_FISCAL_ID);
CREATE INDEX IDX_PRODUTO_CODIGO_BARRAS ON TB_PRODUTO(CODIGO_BARRAS);
CREATE INDEX IDX_TRANSPORTADORA_CNPJ ON TB_TRANSPORTADORA(CNPJ);

-- SCRIPT
-- Criar o schema (caso ainda não exista)
BEGIN
    EXECUTE IMMEDIATE 'CREATE USER TAXINVOICE IDENTIFIED BY password';
    EXECUTE IMMEDIATE 'GRANT CONNECT, RESOURCE TO TAXINVOICE';
    EXECUTE IMMEDIATE 'ALTER USER TAXINVOICE QUOTA UNLIMITED ON USERS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1920 THEN -- Usuário já existe
            RAISE;
        END IF;
END;

-- Definir o schema atual para TAXINVOICE

BEGIN
    -- Criando tabelas
    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_EMITENTE (
        ID NUMBER PRIMARY KEY,
        NOME VARCHAR2(255) NOT NULL,
        CNPJ VARCHAR2(14) NOT NULL,
        ENDERECO VARCHAR2(255) NOT NULL,
        TELEFONE VARCHAR2(20),
        EMAIL VARCHAR2(255)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_DESTINATARIO (
        ID NUMBER PRIMARY KEY,
        NOME VARCHAR2(255) NOT NULL,
        CPF_CNPJ VARCHAR2(14) NOT NULL,
        ENDERECO VARCHAR2(255) NOT NULL,
        TELEFONE VARCHAR2(20),
        EMAIL VARCHAR2(255)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_PRODUTO (
        ID NUMBER PRIMARY KEY,
        DESCRICAO VARCHAR2(255) NOT NULL,
        CODIGO_BARRAS VARCHAR2(13) NOT NULL,
        NCM VARCHAR2(8) NOT NULL,
        CEST VARCHAR2(7),
        UNIDADE VARCHAR2(3) NOT NULL,
        VALOR_UNITARIO NUMBER(10,2) NOT NULL
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_NOTA_FISCAL (
        ID NUMBER PRIMARY KEY,
        NUMERO VARCHAR2(20) NOT NULL,
        SERIE VARCHAR2(5) NOT NULL,
        DATA_EMISSAO DATE NOT NULL,
        VALOR_TOTAL NUMBER(15,2),
        EMITENTE_ID NUMBER REFERENCES TAXINVOICE.TB_EMITENTE(ID),
        DESTINATARIO_ID NUMBER REFERENCES TAXINVOICE.TB_DESTINATARIO(ID),
        STATUS VARCHAR2(20) NOT NULL,
        CHAVE_ACESSO VARCHAR2(44),
        TIPO_OPERACAO VARCHAR2(20)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_ITEM_NOTA_FISCAL (
        ID NUMBER PRIMARY KEY,
        NOTA_FISCAL_ID NUMBER REFERENCES TAXINVOICE.TB_NOTA_FISCAL(ID),
        PRODUTO_ID NUMBER REFERENCES TAXINVOICE.TB_PRODUTO(ID),
        QUANTIDADE NUMBER(10,2),
        VALOR_UNITARIO NUMBER(10,2)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_TRIBUTOS (
        ID NUMBER PRIMARY KEY,
        NOTA_FISCAL_ID NUMBER REFERENCES TAXINVOICE.TB_NOTA_FISCAL(ID),
        ICMS NUMBER(10,2),
        IPI NUMBER(10,2),
        PIS NUMBER(10,2),
        COFINS NUMBER(10,2)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_TRANSPORTADORA (
        ID NUMBER PRIMARY KEY,
        NOME VARCHAR2(255) NOT NULL,
        CNPJ VARCHAR2(14) NOT NULL,
        ENDERECO VARCHAR2(255) NOT NULL,
        TELEFONE VARCHAR2(20),
        EMAIL VARCHAR2(255)
    )';

    EXECUTE IMMEDIATE 'CREATE TABLE TAXINVOICE.TB_FRETE (
        ID NUMBER PRIMARY KEY,
        NOTA_FISCAL_ID NUMBER REFERENCES TAXINVOICE.TB_NOTA_FISCAL(ID),
        TRANSPORTADORA_ID NUMBER REFERENCES TAXINVOICE.TB_TRANSPORTADORA(ID),
        VALOR_FRETE NUMBER(10,2),
        PLACA_VEICULO VARCHAR2(7),
        UF_VEICULO VARCHAR2(2),
        PESO_BRUTO NUMBER(10,2),
        PESO_LIQUIDO NUMBER(10,2)
    )';

    -- Criando sequências para IDs automáticos
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_EMITENTE START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_DESTINATARIO START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_PRODUTO START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_NOTA_FISCAL START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_ITEM_NOTA_FISCAL START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_TRIBUTOS START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_TRANSPORTADORA START WITH 1 INCREMENT BY 1';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE TAXINVOICE.SEQ_FRETE START WITH 1 INCREMENT BY 1';

    -- Criando triggers para atribuir IDs automáticos
    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_EMITENTE
        BEFORE INSERT ON TAXINVOICE.TB_EMITENTE
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_EMITENTE.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_DESTINATARIO
        BEFORE INSERT ON TAXINVOICE.TB_DESTINATARIO
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_DESTINATARIO.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_PRODUTO
        BEFORE INSERT ON TAXINVOICE.TB_PRODUTO
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_PRODUTO.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_NOTA_FISCAL
        BEFORE INSERT ON TAXINVOICE.TB_NOTA_FISCAL
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_NOTA_FISCAL.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_ITEM_NOTA_FISCAL
        BEFORE INSERT ON TAXINVOICE.TB_ITEM_NOTA_FISCAL
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_ITEM_NOTA_FISCAL.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_TRIBUTOS
        BEFORE INSERT ON TAXINVOICE.TB_TRIBUTOS
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_TRIBUTOS.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_TRANSPORTADORA
        BEFORE INSERT ON TAXINVOICE.TB_TRANSPORTADORA
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_TRANSPORTADORA.NEXTVAL;
            END IF;
        END;';

    EXECUTE IMMEDIATE 'CREATE OR REPLACE TRIGGER TAXINVOICE.TRG_FRETE
        BEFORE INSERT ON TAXINVOICE.TB_FRETE
        FOR EACH ROW
        BEGIN
            IF :NEW.ID IS NULL THEN
                :NEW.ID := TAXINVOICE.SEQ_FRETE.NEXTVAL;
            END IF;
        END;';

    -- Criando índices
    EXECUTE IMMEDIATE 'CREATE INDEX TAXINVOICE.IDX_NOTA_FISCAL_NUMERO ON TAXINVOICE.TB_NOTA_FISCAL(NUMERO)';
    EXECUTE IMMEDIATE 'CREATE INDEX TAXINVOICE.IDX_ITEM_NOTA_FISCAL_NOTA ON TAXINVOICE.TB_ITEM_NOTA_FISCAL(NOTA_FISCAL_ID)';
    EXECUTE IMMEDIATE 'CREATE INDEX TAXINVOICE.IDX_PRODUTO_CODIGO_BARRAS ON TAXINVOICE.TB_PRODUTO(CODIGO_BARRAS)';
    EXECUTE IMMEDIATE 'CREATE INDEX TAXINVOICE.IDX_TRANSPORTADORA_CNPJ ON TAXINVOICE.TB_TRANSPORTADORA(CNPJ)';

    -- Se tudo der certo, confirma a transação
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        -- Se houver erro, faz rollback
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Erro: ' || SQLERRM);
END;

ALTER SESSION SET CURRENT_SCHEMA = TAXINVOICE;

